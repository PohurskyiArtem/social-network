{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/Profile.module.scss","components/Profile/ProfileInfo/Contacts/Contacts.module.scss","components/Profile/MyPost/MyPosts.module.scss","components/Profile/MyPost/Post/Post.module.scss","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/Contacts/Contacts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPosts.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","status","isOwner","updateStatus","useState","editMode","setEditMode","localStatus","setLocalStatus","useEffect","className","styles","newStatusInput","onChange","e","target","value","autoFocus","onBlur","catch","statusContainer","noStatus","onDoubleClick","Contact","contactTitle","contactValue","contactsItem","rel","href","Icon","name","Contacts","contacts","contactsArray","Object","keys","key","push","length","contactsTitle","contactsList","map","contact","ProfileInfo","profile","photos","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","uploadPhoto","userInfo","avatar","src","large","alt","changeAvatar","type","files","description","to","settingsLink","ProfileStatus","cn","lookingWork","lookingWork_true","lookingWork_false","about","Post","props","post","id","imgUrl","message","AddPostForm","onSubmit","useForm","register","handleSubmit","errors","formState","clearErrors","reset","data","form","label","required","maxLength","maxLenghtCreator","placeholder","addPostBtn","MyPosts","React","memo","posts","addPost","defaultAvatar","console","log","myPosts","Info","text","header","values","newPostbody","postText","MyPostsContainer","connect","state","profilePage","postsData","Profile","compose","ownerProfile","isProfileLoading","profileIsLoading","userId","auth","getUserProfile","getUserStatus","setUserProfile","withRouter","WithAuthRedirect","CloseSidebar","match","dispatch","userID","params","Loader"],"mappings":"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","file":"static/js/3.e1c0ce94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__3njDi\",\"userInfo\":\"ProfileInfo_userInfo__3hRDH\",\"avatar\":\"ProfileInfo_avatar__3dm1Y\",\"changeAvatar\":\"ProfileInfo_changeAvatar__xea6J\",\"jumpingIcon\":\"ProfileInfo_jumpingIcon__1DQXF\",\"description\":\"ProfileInfo_description__1fuub\",\"settingsLink\":\"ProfileInfo_settingsLink__MdLAV\",\"about\":\"ProfileInfo_about__3llCp\",\"name\":\"ProfileInfo_name__3tKxi\",\"lookingWork\":\"ProfileInfo_lookingWork__Skbf2\",\"lookingWork_false\":\"ProfileInfo_lookingWork_false__3TXKy\",\"lookingWork_true\":\"ProfileInfo_lookingWork_true__1RFV7\",\"statusContainer\":\"ProfileInfo_statusContainer__1qN5h\",\"noStatus\":\"ProfileInfo_noStatus__FnkU_\",\"newStatusInput\":\"ProfileInfo_newStatusInput__3n3Se\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2SaD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__2BEuC\",\"contactsList\":\"Contacts_contactsList__2fs0W\",\"contactsItem\":\"Contacts_contactsItem__ug8u2\",\"contactsTitle\":\"Contacts_contactsTitle__3sb4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__2Zkdj\",\"header\":\"MyPosts_header__2_yq3\",\"addPostBtn\":\"MyPosts_addPostBtn__yD0sB\",\"info\":\"MyPosts_info__3QhhT\",\"form\":\"MyPosts_form__MVw4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3NcmW\",\"avatar\":\"Post_avatar__2Fnup\",\"message\":\"Post_message__2tQdg\"};","import { useEffect, useState } from 'react';\r\nimport styles from \"./ProfileInfo.module.scss\";\r\n\r\nconst ProfileStatusWithHooks = ({status, isOwner, updateStatus}) => {\r\n   \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [localStatus, setLocalStatus] = useState(status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true); \r\n        },\r\n\r\n        deactivateEditMode = () => {\r\n            setEditMode(false);\r\n            updateStatus(localStatus).catch(() => setLocalStatus(status));\r\n        },\r\n\r\n        onStatusChange = (e) => {\r\n            setLocalStatus(e.target.value);\r\n        };\r\n\r\n    useEffect( () => {\r\n        setLocalStatus(status);\r\n    }, [status] )\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* <ToastContainer /> */}\r\n            {!editMode ?\r\n                (\r\n                    <div className={styles.statusContainer}>\r\n                        <span className={!localStatus ? styles.noStatus : null } onDoubleClick={isOwner ? activateEditMode : null}>{ localStatus || \"Set status... (double click here)\" }</span>\r\n                    </div>\r\n                ) : \r\n                (\r\n                    \r\n                    <div>\r\n                        <textarea className={styles.newStatusInput} onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={localStatus} />\r\n                    </div>  \r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import styles from \"./Contacts.module.scss\";\r\nimport Icon from \"../../../common/Icon/Icon\";\r\n\r\nconst Contacts = ({contacts}) => {\r\n    const contactsArray = [];\r\n    for(let key of Object.keys(contacts)) {\r\n        if(contacts[key] !== null) contactsArray.push(<Contact key={key} contactTitle={key} contactValue={contacts[key]}/>)\r\n    }\r\n    return contactsArray.length > 0 ? (\r\n        <div className={styles.contacts}>\r\n            <span className={styles.contactsTitle}>Contacts:</span>\r\n            <ul className={styles.contactsList}>\r\n                {contactsArray.map(contact => contact)}\r\n            </ul>\r\n        </div>\r\n    ) : null\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <li className={styles.contactsItem}><a rel=\"noreferrer\" href={contactValue} target=\"_blank\"><Icon name={contactTitle}/></a></li>\r\n}\r\n\r\nexport default Contacts;","import styles from \"./ProfileInfo.module.scss\";\r\nimport avatar from '../../../assets/images/defaultAvatar.png';\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Icon from \"../../common/Icon/Icon\";\r\nimport cn from \"classnames\";\r\nimport Contacts from \"./Contacts/Contacts\";\r\n\r\nconst ProfileInfo = ({profile: {photos, fullName, lookingForAJob, lookingForAJobDescription, aboutMe, contacts, status}, isOwner, uploadPhoto, updateStatus }) => {\r\n    const onMainPhotoSelected = e => {\r\n        if(e.target.files.length) {\r\n            uploadPhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className={styles.profile}>\r\n            <div className={styles.userInfo}>\r\n                <div className={styles.avatar}>\r\n                    <img src={photos.large ?? avatar} alt=\"avatar\" />\r\n                    {isOwner && (\r\n                        <label className={styles.changeAvatar}>\r\n                            <span>Update photo</span>\r\n                            <Icon name={\"upload\"}/>\r\n                            <input type=\"file\" onChange={onMainPhotoSelected}/>\r\n                        </label>\r\n                    )}\r\n                </div>\r\n                <div className={styles.description}>\r\n\r\n                    {isOwner && <NavLink to=\"/settings\" className={styles.settingsLink}><Icon name=\"edit\"/>Edit profile</NavLink>}\r\n\r\n                    <h3 className={styles.name}>{fullName}</h3>\r\n\r\n                    {!status && !isOwner ? null : <ProfileStatus status={status} updateStatus={updateStatus} isOwner={isOwner}/>}\r\n\r\n                    <div className={cn(styles.lookingWork, {[styles.lookingWork_true]: lookingForAJob, [styles.lookingWork_false]: !lookingForAJob })}>\r\n                        {lookingForAJob ? (\r\n                                <>\r\n                                    <b>Looking for a job...</b>\r\n                                    <br/><br/>\r\n                                    <span>My professional skills:</span>\r\n                                    <p>{lookingForAJobDescription}</p>\r\n                                </>\r\n                            )   \r\n                            : (\r\n                                <span>Not looking for a job</span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {aboutMe && (\r\n                    <div className={styles.about}>\r\n                        <span>About me:</span>\r\n                        <p>{aboutMe}</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Contacts contacts={contacts}/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from'./Post.module.scss';\r\n\r\nconst Post = props => {\r\n    return (\r\n        <li className={styles.post} id={props.id}>\r\n            <img className={styles.avatar} src={props.imgUrl} alt=\"avatar\" />\r\n            <p className={styles.message}>{props.message}</p>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport styles from './MyPosts.module.scss';\r\nimport Post from './Post/Post';\r\nimport cn from \"classnames\";\r\nimport defaultAvatar from \"../../../assets/images/defaultAvatar.png\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Textarea } from '../../common/formsControls/FormsControls';\r\nimport Info from '../../common/Info/Info';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../../redux/profile-reducer';\r\nimport { maxLenghtCreator } from '../../../utils/validators';\r\n\r\nconst AddPostForm = ({onSubmit}) => {\r\n    const { register, handleSubmit, formState: { errors }, clearErrors, reset } = useForm();\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(data => {\r\n            onSubmit(data);\r\n            reset();\r\n        })} className={styles.form}>\r\n            <Textarea\r\n                register={register}\r\n                label=\"newPostbody\"\r\n                errors={errors}\r\n                required\r\n                maxLength={maxLenghtCreator(250)}\r\n                placeholder=\"Enter post text here...\" \r\n                onBlur={() => clearErrors()} \r\n            />\r\n            <button className={cn(styles.addPostBtn, \"submit_btn\")}>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPosts = React.memo(({posts, addPost, profile}) => {\r\n    let avatar = profile.photos.large || defaultAvatar;\r\n\r\n    const addNewPost = (values) => {\r\n        addPost(avatar, values.newPostbody);\r\n    }\r\n    console.log(posts)\r\n\r\n    return (\r\n        <section className={styles.myPosts}>\r\n            <Info text={\"This is a test component. Current version of API not supporting this functional yet\"}/>\r\n            <h3 className={styles.header}>Add new post:</h3>\r\n            <AddPostForm onSubmit={addNewPost}/>\r\n            <h4 className={styles.header}>Recent Posts:</h4>\r\n            <ul>\r\n                { posts.map(post => <Post message={post.postText} key={post.id} imgUrl={avatar}/>) }\r\n            </ul>\r\n        </section>\r\n    )\r\n})\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        posts: state.profilePage.postsData\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport styles from './Profile.module.scss';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from './MyPost/MyPosts';\r\n\r\nconst Profile = ({profile, isOwner, ...props }) => {\r\n    return (\r\n        <section className={styles.profile}>\r\n            <ProfileInfo isOwner={isOwner} profile={profile} {...props}/>\r\n            {isOwner && <MyPostsContainer profile={profile}/>}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from \"./Profile\";\r\nimport Loader from \"../common/Loader/Loader\";\r\nimport { getUserProfile, getUserStatus, updateStatus, uploadPhoto, setUserProfile } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { CloseSidebar } from '../../hoc/CloseSidebar';\r\n\r\nconst ProfileContainer = ({match, getUserProfile, getUserStatus, dispatch, setUserProfile, isProfileLoading, profile, ownerProfile, ...props}) => {\r\n    \r\n    const userID = match.params.userID;\r\n\r\n    useEffect( () => { \r\n        if(userID){\r\n            getUserProfile(userID);\r\n            getUserStatus(userID);\r\n        }\r\n        return () => dispatch(setUserProfile(null))\r\n    }, [userID, getUserProfile, getUserStatus, dispatch, setUserProfile])\r\n\r\n    return isProfileLoading\r\n        ? <Loader /> \r\n        : <Profile \r\n            {...props}\r\n            profile={profile ?? ownerProfile}\r\n            isOwner={!match.params.userID}\r\n            />\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n        profile: state.profilePage.profile,\r\n        ownerProfile: state.profilePage.ownerProfile,\r\n        isProfileLoading: state.profilePage.profileIsLoading,\r\n        userId: state.auth.userId\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateStatus, uploadPhoto, setUserProfile }),\r\n    withRouter,\r\n    WithAuthRedirect,\r\n    CloseSidebar\r\n)(ProfileContainer);"],"sourceRoot":""}